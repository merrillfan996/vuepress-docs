import{_ as e,c as t,o,b as a}from"./app-DjCWsp54.js";const c={},s=a('<h1 id="mvvm模式" tabindex="-1"><a class="header-anchor" href="#mvvm模式"><span>MVVM模式</span></a></h1><p>MVVM模式，<code>M</code>即 model，数据模型；<code>V</code>即 view，视图；<code>VM</code>即 view-model，视图模型。</p><p><img src="https://cdn.jsdelivr.net/gh/xugaoyi/image_store/blog/20200204123438.png" alt=""></p><p><strong>理解</strong></p><p>首先，数据Model通过Data Bindings把数据绑定在View视图上，</p><p>当View视图有交互（有改变）的时候，Dom listeners会自动监听，然后更新数据Model。</p><p><strong>Q：什么是MVVM模式？</strong></p><p>A：MVVM模式，第一个M代表数据模型，V代表视图，VM代表视图模型； 它的实际操作原理是：后台数据通过视图模型来渲染视图，就是页面。当用户在页面上进行操作的时候， 视图模型会自动监听到用户的操作，从而改变后台数据。</p>',8),n=[s];function i(d,r){return o(),t("div",null,n)}const l=e(c,[["render",i],["__file","index.html.vue"]]),p=JSON.parse(`{"path":"/vue/r1f3vxl2/","title":"MVVM模式","lang":"zh-CN","frontmatter":{"title":"MVVM模式","author":null,"createTime":"2024/07/18 17:23:47","permalink":"/vue/r1f3vxl2/","head":[["script",{"id":"check-dark-mode"},";(function () {const um= localStorage.getItem('vuepress-theme-appearance') || 'auto';const sm = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;if (um === 'dark' || (um !== 'light' && sm)) {document.documentElement.classList.add('dark');}})();"],["script",{"id":"check-mac-os"},"document.documentElement.classList.toggle('mac', /Mac|iPhone|iPod|iPad/i.test(navigator.platform))"]]},"headers":[],"readingTime":{"minutes":0.62,"words":187},"git":{"updatedTime":null,"contributors":[]},"filePathRelative":"notes/vue/基础/MVVM模式.md"}`);export{l as comp,p as data};
